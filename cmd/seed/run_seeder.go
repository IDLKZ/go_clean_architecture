package seed

import (
	"clean_architecture_fiber/data/seeders"
	"context"
	"log"

	"github.com/jackc/pgx/v5/pgxpool"
)

// RunSeeders –≤—ã–ø–æ–ª–Ω—è–µ—Ç –≤—Å–µ —Å–∏–¥–µ—Ä—ã –¥–ª—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
// –ü–æ—Ä—è–¥–æ–∫ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –≤–∞–∂–µ–Ω:
// 1. SeedRole - —Å–æ–∑–¥–∞–µ—Ç –±–∞–∑–æ–≤—ã–µ —Ä–æ–ª–∏ (ADMIN, MODERATOR)
// 2. SeedPermission - —Å–æ–∑–¥–∞–µ—Ç –±–∞–∑–æ–≤—ã–µ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è (MANAGE, CREATE, READ, EDIT, DELETE)
// 3. SeedRolePermission - —Å–≤—è–∑—ã–≤–∞–µ—Ç —Ä–æ–ª–∏ —Å —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è–º–∏ (ADMIN –ø–æ–ª—É—á–∞–µ—Ç –≤—Å–µ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è)
//
// –ü—Ä–∏ –æ—à–∏–±–∫–µ –ª—é–±–æ–≥–æ —Å–∏–¥–µ—Ä–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –∑–∞–≤–µ—Ä—à–∞–µ—Ç—Å—è —Å fatal error
func RunSeeders(ctx context.Context, pool *pgxpool.Pool) {
	// –®–∞–≥ 1: –°–æ–∑–¥–∞–Ω–∏–µ —Ä–æ–ª–µ–π
	// –°–æ–∑–¥–∞–µ—Ç —Ä–æ–ª–∏ ADMIN –∏ MODERATOR –µ—Å–ª–∏ –æ–Ω–∏ –µ—â–µ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É—é—Ç
	if err := seeders.SeedRole(ctx, pool); err != nil {
		log.Fatalf("‚ùå SeedRole failed: %v", err)
	}

	// –®–∞–≥ 2: –°–æ–∑–¥–∞–Ω–∏–µ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–π
	// –°–æ–∑–¥–∞–µ—Ç –±–∞–∑–æ–≤—ã–µ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è: MANAGE, CREATE, READ, EDIT, DELETE
	if err := seeders.SeedPermission(ctx, pool); err != nil {
		log.Fatalf("‚ùå SeedPermission failed: %v", err)
	}

	// –®–∞–≥ 3: –°–≤—è–∑—ã–≤–∞–Ω–∏–µ —Ä–æ–ª–µ–π —Å —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è–º–∏
	// –ù–∞–∑–Ω–∞—á–∞–µ—Ç –≤—Å–µ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è —Ä–æ–ª–∏ ADMIN
	if err := seeders.SeedRolePermission(ctx, pool); err != nil {
		log.Fatalf("‚ùå SeedRolePermission failed: %v", err)
	}

	// –í—Å–µ —Å–∏–¥–µ—Ä—ã –≤—ã–ø–æ–ª–Ω–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ
	log.Println("üå± All seeders executed successfully!")
}
